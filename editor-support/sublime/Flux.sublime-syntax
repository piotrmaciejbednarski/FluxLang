%YAML 1.2
---
name: Flux
file_extensions: [fx]
scope: source.flux

variables:
  isuffix: '(?="|;)'

contexts:
  main:
    # Comments (must come first)
    - match: '//.*$\n?'
      scope: comment.line.double-slash.flux

    # i-strings (fixed)
    - match: 'i"'
      scope: string.quoted.double.flux punctuation.definition.string.begin.flux
      push:
        - meta_scope: string.quoted.double.flux
        - match: '"'
          scope: punctuation.definition.string.end.flux
          pop: true
        - match: '\{'
          scope: punctuation.section.interpolation.begin.flux
          push: interpolation_scope
        - match: '[^"{]+'
          scope: string.quoted.double.flux

    # Regular strings
    - match: '"'
      scope: string.quoted.double.flux punctuation.definition.string.begin.flux
      push:
        - meta_scope: string.quoted.double.flux
        - match: '"'
          scope: punctuation.definition.string.end.flux
          pop: true
        - match: '\\[\\"nrt]'
          scope: constant.character.escape.flux

    # Keywords
    - match: '\b(alignof|and|as|asm|assert|auto|break|bool|case|catch|char|const|continue|data|def|default|do|elif|else|false|float|for|global|if|import|in|is|int|namespace|new|not|object|or|private|public|return|signed|sizeof|struct|super|switch|this|throw|true|try|typeof|union|unsigned|void|volatile|while|xor)\b'
      scope: keyword.control.flux

    # Types
    - match: '\b(struct|object|union|int|float|void|data|const|volatile|char)\b'
      scope: storage.type.flux

    # Functions
    - match: '\b([a-zA-Z_][a-zA-Z0-9_]*)\s*(?=\()'
      scope: entity.name.function.flux

    # Special methods
    - match: '__[a-z]+__'
      scope: keyword.operator.special-method.flux

    # Numbers
    - match: '\b\d+(\.\d+)?([eE][+-]?\d+)?\b'
      scope: constant.numeric.flux

    # Hex/Binary
    - match: '\b0x[0-9a-fA-F]+\b'
      scope: constant.numeric.hex.flux
    - match: '\b0b[01]+\b'
      scope: constant.numeric.binary.flux

    # Operators
    - match: '(\+|\-|\*|\/|\%|\=\=|\!\=|\>\=|\<\=|\>\>|\<\<|\&\&|\|\||\&|\||\^|\~|\!\=|\=|\+|\-|\*\*|\:)'
      scope: keyword.operator.flux

  interpolation_scope:
    - match: '\}'
      scope: punctuation.section.interpolation.end.flux
      pop: true
    - match: '[^\}]+'
      scope: source.flux